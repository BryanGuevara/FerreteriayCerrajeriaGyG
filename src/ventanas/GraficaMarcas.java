/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Conexiones;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;

/**
 *
 * @author MINEDUCYT
 */
public class GraficaMarcas extends javax.swing.JFrame {

    int Truper = 0, Viduc = 0, Total = 0, Iml = 0, Susan = 0, Sin = 0;
    String[] Estatus = new String[6];
    int[] Count = new int[6];

    /**
     * Creates new form GrafiaEstatus
     */
    public GraficaMarcas() {
        initComponents();

        setSize(459, 399);
        setResizable(false);
        setTitle("Provedores");
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        ImageIcon Wallpaper = new ImageIcon("src/images/wallpaper2.jpg");
        Icon icono = new ImageIcon(Wallpaper.getImage().getScaledInstance(LabelWallpaper.getWidth(),
                LabelWallpaper.getHeight(), Image.SCALE_DEFAULT));

        LabelWallpaper.setIcon(icono);
        this.repaint();

        try {
            Connection cn = Conexiones.conexion();
            PreparedStatement pst = cn.prepareStatement(
                    "select Marca, count(marca) as Cantidad from articulos group by Marca");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int posicion = 0;
                do {
                    Estatus[posicion] = rs.getString(1);
                    Count[posicion] = rs.getInt(2);

                    if (Estatus[posicion].equals("Truper")) {
                        Truper = Count[posicion];
                    } else if (Estatus[posicion].equals("Viduc")) {
                        Viduc = Count[posicion];
                    } else if (Estatus[posicion].equals("Total")) {
                        Total = Count[posicion];
                    } else if (Estatus[posicion].equals("Iml")) {
                        Iml = Count[posicion];
                    } else if (Estatus[posicion].equals("Nulo")) {
                        Sin = Count[posicion];
                    } else if (Estatus[posicion].equals("Inversiones Asiaticas")) {
                        Susan = Count[posicion];
                    }
                    posicion++;
                } while (rs.next());
            }

        } catch (Exception e) {
            System.out.println(e);
        }

        repaint();
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource(
                "images/iconoapp.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        LabelWallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Grafica de Provedores");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
        getContentPane().add(LabelWallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraficaMarcas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraficaMarcas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraficaMarcas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraficaMarcas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraficaMarcas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelWallpaper;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        {
            int total = 0;
            total = Truper + Viduc + Total + Iml + Sin + Susan;
            if (total >= 1) {
                int truper = Truper * 360 / total;
                int viduc = Viduc * 360 / total;
                int tota = Total * 360 / total;
                int iml = Iml * 360 / total;
                int sin = Sin * 360 / total;
                int susan = Susan * 360 / total;

                g.setColor(Color.white);
                g.fillArc(25, 110, 200, 200, truper + viduc + tota + iml + susan, sin + 5);
                g.fillRect(250, 270, 20, 20);
                g.setColor(Color.white);
                g.drawString("Sin categorizar: " + Sin, 275, 285);

                g.setColor(Color.ORANGE);
                g.fillArc(25, 110, 200, 200, 0, truper);
                g.fillRect(250, 120, 20, 20);
                g.setColor(Color.white);
                g.drawString("Truper: " + Truper, 275, 135);

                g.setColor(Color.YELLOW);
                g.fillArc(25, 110, 200, 200, truper, viduc);
                g.fillRect(250, 150, 20, 20);
                g.setColor(Color.white);
                g.drawString("Viduc: " + Viduc, 275, 165);

                g.setColor(Color.CYAN);
                g.fillArc(25, 110, 200, 200, truper + viduc, tota);
                g.fillRect(250, 180, 20, 20);
                g.setColor(Color.white);
                g.drawString("Total: " + Total, 275, 195);

                g.setColor(Color.RED);
                g.fillArc(25, 110, 200, 200, truper + viduc + tota, iml);
                g.fillRect(250, 210, 20, 20);
                g.setColor(Color.white);
                g.drawString("Iml: " + Iml, 275, 225);

                g.setColor(Color.BLUE);
                g.fillArc(25, 110, 200, 200, truper + viduc + tota + iml, susan);
                g.fillRect(250, 240, 20, 20);
                g.setColor(Color.white);
                g.drawString("Inversiones Asiaticas: " + Susan, 275, 255);
            }
        }
    }
}
